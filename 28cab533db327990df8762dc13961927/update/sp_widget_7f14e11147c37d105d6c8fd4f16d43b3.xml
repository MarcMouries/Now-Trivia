<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function($scope, $window, $http, spUtil, $location) {
    var c = this;
    c.isLoading = true;

    // Extract 'game_id' from the URL
    var searchObject = $location.search();
    c.gameId = searchObject.game_id;

    // PLAYERS LIST
    c.playerList = [];
    c.loadPlayers = function() {
        c.isLoading = true;
        var gameId = c.gameId;

        $http.get('/api/x_snc_nowtrivia/game/' + gameId + '/players')
            .then(function(response) {
                c.playerList = response.data.result;
                console.log("PLAYERS =", c.playerList);
				c.isLoading = false; 
            }, function(error) {
                console.error('Error fetching players:', error);
				c.isLoading = false; 
            });
    };
    // Load players when the widget loads
    c.loadPlayers();

    // Generate join game URL
    c.joinGameUrl = 'https://' + $window.location.host + '/nowtrivia?id=join-game&game_id=' + c.gameId;

    //COPY LINK TO CLIPBOARD
    c.copyLinkToClipboard = function() {
        navigator.clipboard.writeText(c.joinGameUrl)
            .then(function() {
                spUtil.addTrivialMessage('Link copied to clipboard successfully!');
            }, function(err) {
                spUtil.addErrorMessage('Could not copy text: ', err);
            });
    }

    // RECORD WATCHER PLAYERS LIST
    var query = "game=" + c.gameId;
    console.log("query = " + query);
    spUtil.recordWatch($scope, "x_snc_nowtrivia_player", query, function(payload) {
        console.log("Update in players for game " + c.gameId + ": ", payload);
        // Check if the payload indicates a new player added
        if (payload.data.operation === 'insert') {
            var record = payload.data.record;
            var newPlayer = {
                sys_id: record.sys_id,
                name: record.name.value,
                isNew: true // Temporary property to indicate a new player
            };
            c.playerList.push(newPlayer);

            // Remove the isNew flag after a delay
            setTimeout(function() {
                newPlayer.isNew = false;
                $scope.$apply(); // Update the scope
            }, 3000); // Duration of the CSS transition


        } else {
            c.loadPlayers();
        }
    });
};]]></client_script>
        <controller_as>c</controller_as>
        <css>

/* COLORS */
.bg-white {
  background-color: #ffffff;
}
.bg-now-wasabi {
  background-color: #62d84e;
}

.border-transparent {
  border-color: transparent;
}

.font-semibold {
  font-weight: 600;
}

.shadow-lg {
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
}
.p-8 {
  padding: 2rem;
}
.rounded {
  border-radius: 0.5rem;
}

.rounded-l-none {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
}
.rounded-r-none {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
}

.w-full {
    width: 100%;
}

.p-6 {
    padding: 1.5rem;
}

.font-medium {
    font-weight: 500;
}
.flex {
    display: flex;
}



/* Style for the player list container */
.player-list-container {
    display: flex;
    flex-direction: column;
    padding: 10px;
    background-color: #f2f2f2;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    max-width: 300px; /* Adjust the width as needed */
}


.player {
    padding: 8px 12px;
    background-color: #ffffff;
    border: 1px solid #ddd;
    margin-bottom: 8px;
    border-radius: 4px;
    transition: background-color 0.3s;
}

/* Initial style for new players */
.new-player {
    background-color: yellow; /* Highlight color */
    transition: background-color 3s ease-out; /* Transition effect */
}

/* Style for all players */
.player {
    _background-color: transparent; /* Normal background color */
    /* Other styling */
}



/* Hover effect for players */
.player:hover {
    background-color: #e9e9e9;
}

/* Style for 'No players found' message */
.no-players {
    text-align: center;
    padding: 15px;
    background-color: #ffeded;
    border: 1px solid #ffdddd;
    color: #d9534f;
    border-radius: 8px;
    font-style: italic;
}



</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>nowtrivia_host</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>NowTrivia Host</name>
        <option_schema/>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function() {	
	
	console.log("SERVER: ");
	if (input) {
		//data.message = (input.sometext.length > 0) ? "Hello " + input.sometext + "!" : "";
  }
	 if (input && input.hostname) {
        console.log("SERVER: hostname = " + input.hostname);
        // Add logic to create a record or perform other actions
    }
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>Marc.Mouries</sys_created_by>
        <sys_created_on>2023-12-10 15:54:44</sys_created_on>
        <sys_id>7f14e11147c37d105d6c8fd4f16d43b3</sys_id>
        <sys_mod_count>45</sys_mod_count>
        <sys_name>NowTrivia Host</sys_name>
        <sys_package display_value="Now Trivia" source="x_snc_nowtrivia">28cab533db327990df8762dc13961927</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Trivia">28cab533db327990df8762dc13961927</sys_scope>
        <sys_update_name>sp_widget_7f14e11147c37d105d6c8fd4f16d43b3</sys_update_name>
        <sys_updated_by>Marc.Mouries</sys_updated_by>
        <sys_updated_on>2023-12-17 03:42:07</sys_updated_on>
        <template><![CDATA[<div class="host_a_game">

  <form class="bg-white shadow-lg rounded p-8">
    <h2 class="text-2xl tracking-tight leading-10 
               font-bold text-gray-900 sm:text-3xl 
               sm:leading-none md:text-4xl">Edit Game</h2> 
    <div class="mt-6">
      <hr>
      <div class="w-full p-6"><p class="text-lg md:text-xl font-medium ">Share this link with your friends so they can join your game.</p> 
        <div class="flex flex-col items-center md:flex-row md:items-stretch w-full mt-4">
          <input id=joinGameUrl
                 ng-model="c.joinGameUrl"
                 class="game_link
                        md:block form-input 
                        block w-full 
                        sm:text-sm sm:leading-5 
                        rounded-r-none my-2 md:my-0"> 
          <button ng-click="c.copyLinkToClipboard()" 
                  class="text-white bg-now-wasabi 
                         border-transparent
                         font-semibold rounded-l-none
                         rounded px-4 py-2 md:py-0  block"> Copy Link </button>
        </div>
      </div>
      <hr>

      <h2>
        Players
      </h2>

      <div class="player-list-container" ng-if="!c.isLoading && c.playerList.length">
        <div class="player" 
             ng-repeat="player in c.playerList track by player.sys_id" 
             ng-class="{'new-player': player.isNew}">       
          {{player.name}}
        </div>

      </div>
      <div class="no-players" ng-if="!c.isLoading && !c.playerList.length" >  
        No players found.
      </div>
    </div> 
  </form>
</div>]]></template>
    </sp_widget>
</record_update>
