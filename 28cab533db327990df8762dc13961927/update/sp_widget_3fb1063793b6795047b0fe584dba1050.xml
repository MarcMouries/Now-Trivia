<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function($scope, $window, $http, spUtil, $location) {
	/* widget controller */
	var c = this;

	console.log("CLIENT: ", $scope.data);
	
	
				console.log('1.  gs.getUser()=' + JSON.stringify(gs.getUser(), null, 4));


	c.createGame = function() {
		var hostname = $scope.data.hostname;
		console.log("CLIENT: hostname = " + hostname);

		$http({
			method : "POST",
			url : "/api/x_snc_nowtrivia/game",
			headers : {"Content-type" : "application/json"},
			data: { "host": hostname } 

		}).then(function success(response) {
			console.log('success response=' + JSON.stringify(response, null, 4));
			var newRecordSysId = response.data.result.newRecordSysId;

			spUtil.addTrivialMessage('Game created');
			
			// TEST LOGIN
			
			login("guest", "AppEngine4Ever!");
							console.log('2.  gs.getUser()=' + JSON.stringify(gs.getUser(), null, 4));


			// var instanceName = $window.location.host;
			// $window.location.href = 'https://' + instanceName + '/nowtrivia?id=host&game_id=' + newRecordSysId;

		//	$location.path('/nowtrivia');
		//	$location.search({'id' : 'host', 'game_id': newRecordSysId});
		//	$location.replace();
			
			// Get the current user's name
			if (g_user){
				console.log("1) currentUser = " + g_user.userID)
			} 
			else {
				console.log("currentUser = (g_user unvail)")
			}
			
			
			
		}, function failure(response) {
			spUtil.addErrorMessage('Severe error');
			console.log('response=' + JSON.stringify(response, null, 4));
		});
	} // create Game
	
	
	function login(username, password, isCertLogin) {
		var url = spUtil.getURL({sysparm_type: 'view_form.login'});

		return $http({
			method: 'post',
			url: url,
			data: $.param({
				'sysparm_type': 'login',
				'ni.nolog.user_password': true,
				'remember_me': !!c.remember_me ? true : false,
				'user_name': username,
				'user_password': password,
				'get_redirect_url': true,
				'sysparm_goto_url': '/future-fellows',
				'mfa_redirect_url': c.data.pageURI
			}),
			headers: {
				'Content-Type': 'application/x-www-form-urlencoded'
			}
		}).then(function(response) {
			if (!response.data) {
				c.message = $scope.data.errorMsg;
				return;
			}

			if (response.data.status == 'success') {
					handleLoginSuccess.call(response);
			} else {
				// wrong username or password
				c.message = response.data.message;
				c.password = "";
				c.username = "";
				angular.element("#username").focus();
			}

		}, function errorCallback(response) {
			c.message = $scope.data.errorMsg;
		});
	};

	function handleLoginSuccess() {
		c.success = this.data.message;
		console.log("handleLoginSuccess: " + c.success)
		
					// Get the current user's name
			if (g_user){
				console.log("2) currentUser = " + g_user.userID)
			} 
			else {
				console.log("currentUser = (g_user unvail)")
			}
		//$window.location = this.data.redirect_url;
	}
	
	
};]]></client_script>
        <controller_as>c</controller_as>
        <css>

/* COLORS */
.bg-white {
  background-color: #ffffff;
}
.bg-now-wasabi {
  background-color:  #62d84e; //$color-now-green;
}

.border-transparent {
  border-color: transparent;
}

.font-semibold {
  font-weight: 600;
}

.shadow-lg {
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
}
.p-8 {
  padding: 2rem;
}
.rounded {
  border-radius: 0.25rem;
}

.hostname {
  height: 4rem;
  border-radius: 0.375rem;
  border-color: #d2d6dc;
  border-width: 1px;
}

.button_game {
  padding : 1rem;
  border-radius: 0.375rem;
}
.button_game:hover {
    background-color: #42c72c;
    border-color: var(--border-color-hover);
}



</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>nowtrivia_main</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>NowTrivia Main</name>
        <option_schema/>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function() {	
	
	console.log("SERVER: ");
	if (input) {
		//data.message = (input.sometext.length > 0) ? "Hello " + input.sometext + "!" : "";
  }
	 if (input && input.hostname) {
        console.log("SERVER: hostname = " + input.hostname);
        // Add logic to create a record or perform other actions
    }
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-12-06 02:13:17</sys_created_on>
        <sys_id>3fb1063793b6795047b0fe584dba1050</sys_id>
        <sys_mod_count>68</sys_mod_count>
        <sys_name>NowTrivia Main</sys_name>
        <sys_package display_value="Now Trivia" source="x_snc_nowtrivia">28cab533db327990df8762dc13961927</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Trivia">28cab533db327990df8762dc13961927</sys_scope>
        <sys_update_name>sp_widget_3fb1063793b6795047b0fe584dba1050</sys_update_name>
        <sys_updated_by>Marc.Mouries</sys_updated_by>
        <sys_updated_on>2023-12-14 02:29:59</sys_updated_on>
        <template><![CDATA[<div class="host_a_game">

  <form class="bg-white shadow-lg rounded p-8">
    <h2 class="text-2xl tracking-tight leading-10 font-bold text-gray-900 sm:text-3xl sm:leading-none md:text-4xl">Host a ServiceNow game!</h2> 
    <input type="hidden" name="_token" value="ug5oaipqoueTHQNrgC3le6HOuqaXe3Gvlb3OeI0K"> 
    <div class="mt-6">
      <label for="hostname" class="block text-lg font-medium leading-5 text-gray-700">Your hostname</label> 
      <div class="mt-2 relative rounded-md shadow-sm">
        <input id="hostname" 
               type="text" 
               name="hostname" 
               class="hostname"
               ng-model="data.hostname"
               placeholder="host name" 
               class="form-input h-12 block w-full sm:text-md sm:leading-5">
      </div> 
      <p class="mt-2 text-sm text-gray-500">This is how your friends will see you.</p>
    </div> 
    <button ng-click="c.createGame()" 
            type="submit" 
            class="button_game mt-6 inline-flex 
                                 items-center padding border border-transparent text-lg 
                                 leading-5 font-semibold rounded-md 
                                 text-white 
                                 bg-now-wasabi 
                                 hover:bg-indigo-600 focus:outline-none 
                                 focus:border-indigo-700 focus:shadow-outline-indigo 
                                 active:bg-indigo-700 transition ease-in-out duration-150">
    Create game
    </button>
    
  </form>


</div>]]></template>
    </sp_widget>
</record_update>
